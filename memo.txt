#windows
python3 res/inline-sciter.py
cargo build --features inline --bins --release
cp ./target/release/rustdesk.exe ./Release
pushd ./libs/portable
pip3 install -r requirements.txt
python3 ./generate.py -f ../../Release/ -o . -e ../../Release/rustdesk.exe
popd
cp ./target/release/rustdesk-portable-packer.exe ./rustdesk-1.2.4-aarch64-windows-sciter-install.exe
mv ./rustdesk-1.2.4-aarch64-windows-sciter-install.exe ./rustdesk-1.2.4-x64-windows-sciter-install.exe -Force

Push-Location flutter ; flutter pub get ; Pop-Location
~/.cargo/bin/flutter_rust_bridge_codegen --rust-input ./src/flutter_ffi.rs --dart-output ./flutter/lib/generated_bridge.dart
rm -r .\flutter\build\windows\runner\Release\RustDeskIddDriver
python3 ./build.py --portable --hwcodec --flutter --feature IddDriver

%comspec% /k "C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Auxiliary\Build\vcvarsamd64_arm64.bat" 
rustup update
rustup target add aarch64-pc-windows-msvc
rustup target list
	
reg add "HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\AeDebug" /v Auto /t REG_DWORD /d 1 /f
reg add "HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\rustdesk.exe" /v Debugger /t REG_SZ /d "vsjitdebugger.exe" /f

#macos
pushd flutter && flutter pub get && popd
~/.cargo/bin/flutter_rust_bridge_codegen --rust-input ./src/flutter_ffi.rs --dart-output ./flutter/lib/generated_bridge.dart --c-output ./flutter/macos/Runner/bridge_generated.h
./build.py --flutter
codesign --force --options runtime -s "Developer ID Application" --deep --strict ./flutter/build/macos/Build/Products/Release/RustDesk.app -vvv
rm -r /Applications/RustDesk.app
cp -r ./flutter/build/macos/Build/Products/Release/RustDesk.app /Applications/RustDesk.app
open -n /Applications/RustDesk.app --args --server

cargo bundle --release --features inline
cp libsciter.dylib target/release/bundle/osx/RustDesk.app/Contents/MacOS
mv target/release/bundle/osx/RustDesk.app/Contents/Resources/res/* target/release/bundle/osx/RustDesk.app/Contents/Resources
rm -rf target/release/bundle/osx/RustDesk.app/Contents/Resources/res
target/release/bundle/osx/RustDesk.app/Contents/Info.plist
  <key>LSUIElement</key>
  <string>1</string>

python3 res/inline-sciter.py
cargo build --release --features inline
cp target/release/rustdesk ../Documents/RustDesk.app/Contents/MacOS/rustdesk 
codesign --force --options runtime -s "Developer ID Application" --deep --strict ../Documents/RustDesk.app -vvv
rm -r /Applications/RustDesk.app
cp -r ../Documents/RustDesk.app /Applications/RustDesk.app

create-dmg --icon "RustDesk.app" 200 190 --hide-extension "RustDesk.app" --window-size 800 400 --app-drop-link 600 185 rustdesk-1.2.0-aarch64-macos-sciter.dmg ../Documents/RustDesk.app
codesign --force --options runtime -s "Developer ID Application" --deep --strict rustdesk-1.2.0-aarch64-macos-sciter.dmg -vvv

csrutil disable
file target\release\rustdesk
sudo lsof -i -n -P | grep rustdesk     // netstat
https://github.com/create-dmg/create-dmg
security find-identity -p basic -v

#android
cp -r /opt/rustdesk_thirdparty_lib/android ./flutter/
cp -r /opt/rustdesk_thirdparty_lib/vcpkg ../

pushd flutter && flutter pub get && popd
~/.cargo/bin/flutter_rust_bridge_codegen --rust-input ./src/flutter_ffi.rs --dart-output ./flutter/lib/generated_bridge.dart
BINDGEN_EXTRA_CLANG_ARGS_aarch64_linux_android="--target=arm64-apple-macos --sysroot=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk" RUST_LOG=debug cargo ndk --platform 21 --target aarch64-linux-android rustc --lib --features flutter --release 
cp target/aarch64-linux-android/release/liblibrustdesk.so flutter/android/app/src/main/jniLibs/arm64-v8a/librustdesk.so
pushd flutter; flutter build apk --target-platform android-arm64 --release; popd
adb install flutter/build/app/outputs/flutter-apk/app-release.apk

sudo  mount -t drvfs '\\192.168.111.10\Macintosh HD' /mnt/mac
cp target/aarch64-linux-android/debug/liblibrustdesk.so /mnt/mac/Users/sjpark/rustdesk/flutter/android/app/src/main/jniLibs/arm64-v8a/librustdesk.so

adb logcat | grep LOG_SERVICE
adb emu kill 

sudo apt install build-essential
sudo apt install gcc-multilib

#ios
flutter/ios/Runnder.xcworkspace/View/Navigators/Project:Runnder/targets:Runner/Signing & Capability/Teams
pushd flutter && flutter pub get && popd
~/.cargo/bin/flutter_rust_bridge_codegen --rust-input ./src/flutter_ffi.rs --dart-output ./flutter/lib/generated_bridge.dart --c-output ./flutter/ios/Runner/bridge_generated.h
cargo build --features flutter --target aarch64-apple-ios --lib --release
pushd flutter; flutter build ios --release; popd
xcode/Window/Devices and Simulators/INSTALLED APPS

xcrun simctl list
open -a Simulator --args -CurrentDeviceUDID 8FEC868E-2D4D-4254-AD25-86C764630DD5

# rustdesk
cd C:\Users\sjpark\Documents\rustdesk
set VCPKG_ROOT=C:\Users\sjpark\Documents\vcpkg
set LIBCLANG_PATH=C:\Program Files\LLVM\bin

# ring
set path=C:\Program Files\LLVM\bin;C:\Strawberry\perl\bin\;%path%; 
.\target\tools\windows\nasm\nasm.exe
set RING_PREGENERATE_ASM=1

#dependencies
ring = { git = "https://github.com/sj6219/ring", branch = "0.16.20_alpha" }


adb shell dumpsys package com.carriez.flutter_hbb
objdump -T ~/rustdesk/target/aarch64-linux-android/release/liblibrustdesk.so 

cat /Users/sjpark/Library/Android/sdk/ndk/26.1.10909125/toolchains/llvm/prebuilt/darwin-x86_64/lib/clang/17.0.2/lib/linux/aarch64/lldb-server | adb shell sh -c 'cat > /data/local/tmp/lldb-server && chmod 755 /data/local/tmp/lldb-server'
adb shell run-as com.carriez.flutter_hbb mkdir -p /data/data/com.carriez.flutter_hbb/lldb/bin/
adb shell "cat /data/local/tmp/lldb-server | run-as com.carriez.flutter_hbb sh -c 'cat > /data/data/com.carriez.flutter_hbb/lldb/bin/lldb-server && chmod 755 /data/data/com.carriez.flutter_hbb/lldb/bin/lldb-server'"

adb shell ps -e -o PID -o NAME | grep com.carriez.flutter_hbb
adb forward tcp:10086 tcp:10086
adb shell run-as com.carriez.flutter_hbb /data/data/com.carriez.flutter_hbb/lldb/bin/lldb-server platform --listen "*:10086" --server 

cd /Users/sjpark/Library/Android/sdk/ndk/26.1.10909125/toolchains/llvm/prebuilt/darwin-x86_64/bin/
lldb
platform select remote-android
platform connect connect://localhost:10086
attach
b connection.rs:624

add-dsym /Users/sjpark/ndk-samples/hello-gl2/app/build/intermediates/merged_native_libs/debug/out/lib/arm64-v8a/libgl2jni.so
b gl_code.cpp:151
 
